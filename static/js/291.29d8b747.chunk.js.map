{"version":3,"file":"static/js/291.29d8b747.chunk.js","mappings":"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","sources":["redux/selectors.js","components/User/User.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","components/User/User.js","pages/MyPhonebookPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterQuery) => {\n    const visible = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n    );\n    return visible;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 400px;\n  margin: 36px auto 0 auto;\n  padding: 18px;\n  border: 2px solid #1ac6ff;\n  border-radius: 8px;\n  background-color: white;\n  margin-top: 10%;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 18px;\n  font-weight: 700;\n  font-size: 24px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 250px;\n  margin: 8px 0 24px 0;\n  padding: 16px;\n  font-size: 16px;\n  border-radius: 6px;\n  border: 1px solid #1ac6ff;\n  height: 32px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 18px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { StyledInput, StyledLabel } from './Filter.styled';\nimport { updateFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <StyledLabel>\n      Find contacts by name\n      <StyledInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        onChange={evt => dispatch(updateFilter(evt.target.value))}\n      />\n    </StyledLabel>\n  );\n};\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 36px;\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n  width: 250px;\n  margin: 8px 0;\n  padding: 16px;\n  font-size: 16px;\n  border-radius: 6px;\n  border: 1px solid blue;\n  height: 32px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: 16px;\n  color: red;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const StyledButton = styled.button`\n  margin-top: 18px;\n  padding: 4px;\n  background-color: white;\n  border: transparent;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: white;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n  Error,\n} from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { addNewContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from '../../redux/selectors';\nimport toast from 'react-hot-toast';\nimport { Button } from '@chakra-ui/react';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too short').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'It must be min 5 numbers (1234567 or 123-45-67)'\n    )\n    .required('Required'),\n});\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleAddContact = values => {\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (checkContact) {\n      Report.warning(\n        'Contact has not been added.',\n        `${values.name} is already in contacts.`,\n        'Okay'\n      );\n      return;\n    }\n    dispatch(addNewContact(values));\n    toast.success('Successfully created!');\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        handleAddContact(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm autoComplete=\"off\">\n        <StyledLabel>\n          Name\n          <StyledInput type=\"text\" name=\"name\" placeholder=\"New contact\" />\n          <Error name=\"name\" component=\"p\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledInput type=\"tel\" name=\"number\" placeholder=\"Enter a number\" />\n          <Error name=\"number\" component=\"p\" />\n        </StyledLabel>\n        <Button\n          variant=\"outline\"\n          colorScheme=\"blue\"\n          size=\"sm\"\n          marginTop=\"4\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          Add contact\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  list-style: none;\n`;\n\nexport const Span = styled.span`\n  line-height: 48px;\n  padding-right: 12px;\n  font-size: 18px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 24px;\n  text-align: center;\n  font-size: 12px bold;\n  background-color: white;\n  border: transparent;\n  border-radius: 8px;\n  &:hover {\n    background-color: #ffffff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact, Span, Btn } from './Contacts.styled';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/selectors';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul>\n        {contacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <Contact key={id}>\n              <Span>{name}:</Span>\n              <Span>{number}</Span>\n              <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                <RiDeleteBin6Line />\n              </Btn>\n            </Contact>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../../redux/selectors';\nimport { LineWave } from 'react-loader-spinner';\nimport { Container, Title } from './User.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nexport const User = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Container>\n      <Title>New Contact</Title>\n      <Phonebook></Phonebook>\n\n      <Title>My Phonebook</Title>\n      {contacts.length > 0 ? (\n        <Filter></Filter>\n      ) : (\n        !error && !isLoading && <p>You don't have any contacts</p>\n      )}\n      <Contacts></Contacts>\n      {error && <p>{error}</p>}\n      {isLoading && (\n        <LineWave\n          height=\"100\"\n          width=\"100\"\n          color=\"blue\"\n          ariaLabel=\"line-wave\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n    </Container>\n  );\n};\n","import { User } from 'components/User/User';\n\nexport default function MyPhonebookPage() {\n  return (\n    <>\n      <User />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","filterQuery","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledInput","StyledLabel","Filter","dispatch","useDispatch","_jsxs","children","_jsx","type","placeholder","onChange","evt","updateFilter","target","value","StyledForm","Form","Field","Error","ErrorMessage","_templateObject3","_templateObject4","_templateObject5","schema","Yup","shape","min","required","number","matches","Phonebook","useSelector","Formik","initialValues","validationSchema","onSubmit","values","actions","some","Report","concat","addNewContact","toast","handleAddContact","resetForm","autoComplete","component","Button","variant","colorScheme","size","marginTop","disabled","Contact","Span","Btn","Contacts","useEffect","fetchContacts","_Fragment","map","id","onClick","deleteContact","RiDeleteBin6Line","User","length","LineWave","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","MyPhonebookPage"],"sourceRoot":""}